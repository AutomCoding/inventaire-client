@mixin vendor-prefix($property, $value, $prefixes: webkit moz ms o) {
    @each $prefix in $prefixes {
        #{"-" + $prefix + "-" + $property}: $value;
    }
    #{$property}: $value;
}

@mixin flex($direction, $align:'left', $justify:'center') {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}

@mixin color-class($color, $contrast:white, $darken:15%) {
  color: $color;
  &.button{
    color: $contrast;
    background-color: $color;
    &:hover{
      background-color: darken($color, $darken);
    }
  }
}

@mixin bg-hover($bg-color, $darken:15%){
  background-color: $bg-color;
  &:hover{
    background-color: darken($bg-color, $darken);
  }
}

@mixin custom-button($bg-color, $color: white, $margin: 0.1em, $padding:1em, $darken:15%){
  @include bg-hover($bg-color, $darken);
  color: $color;
  padding: $padding;
  margin: $margin;
}

@mixin border($color, $width:1px, $style:solid){
  border: $width $style $color;
}

@mixin shadow-box($color, $offsetX:0, $offsetY:1px, $blur:2px, $spread:0,  $opacity: 0.5){
  box-shadow: $offsetX $offsetY $blur $spread rgba($color, $opacity);
}

@mixin transition($elements:all, $speed:0.5s, $mode:ease){
  transition: $elements $speed $mode;
}

@mixin standard-dropdown(){
  .f-dropdown{
    a, li, i.fa{
      color: $dark-grey;
    }
  }
}

.bg-cover-commons{
  background-size: cover;
  background-position: center center;
  transition: background 0.5s ease;
}

@mixin bg-cover($url){
  @extend .bg-cover-commons;
  background-image: url($url);
}

@mixin multidef-bg-cover($url, $hd:null){
  @extend .bg-cover-commons;
  /*Small screens*/
  @media screen and (max-width: 500px) {
    background-image: url('http://cdn.filter.to/500x500/' + $url);
  }
  /*Large screens*/
  @media screen and (min-width: 500px) {
    background-image: url('http://cdn.filter.to/1000x1000/' + $url);
  }
  @if $hd {
    @media screen and (min-width: 1300px) {
      background-image: url('//' + $url);
    }
  }
}