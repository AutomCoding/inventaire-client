#!/usr/bin/env zsh

set -eu

############ ENV ###############
# Avoid to rely on globally installed packages to ease installation
alias cleancss=node_modules/.bin/cleancss
alias uglifyjs=node_modules/uglify-js/bin/uglifyjs

pubjs=public/js
pubcss=public/css
pubimages=public/images
vendor=vendor/js

uglifyInPlace(){
  uglifyjs $1 --compress --mangle --output $1
}

resetAndAddToBundle(){
  cat $1 | grep -v '//# sourceMappingURL' > $2
}

addToBundle(){
  echo ';\n' >> $2
  cat $1 | grep -v '//# sourceMappingURL' >> $2
}

# Keep versions in sync with app/api/assets.coffee
quagga_base=quagga-0.11.5
isbn_base=isbn2-0.1.8
papaparse_base=papaparse-4.1.2
cropper_base=cropper-2.3.0
leaflet_base=leaflet-bundle-1.3.1
piwik_base=piwik-3.0.1



############ INSTALLATIONS ###############

### Quagga ###
quagga=node_modules/quagga/dist
cp ${quagga}/quagga.js ${pubjs}/${quagga_base}.js
cp ${quagga}/quagga.min.js ${pubjs}/${quagga_base}.min.js
gzip --best < "${pubjs}/${quagga_base}.min.js" > "${pubjs}/${quagga_base}.min.js"
echo -e '\e[0;32mdone copying:\e[0m' quagga


### isbn2 ###
isbn2=node_modules/isbn2
cp ${isbn2}/isbn.js ${pubjs}/${isbn_base}.js
cp ${isbn2}/isbn.js ${pubjs}/${isbn_base}.min.js
uglifyInPlace ${pubjs}/${isbn_base}.min.js
gzip --best < "${pubjs}/${isbn_base}.min.js" > "${pubjs}/${isbn_base}.min.js"
echo -e '\e[0;32mdone copying:\e[0m' isbn2


### papaparse ###
cp node_modules/papaparse/papaparse.js ${pubjs}/${papaparse_base}.js
cp node_modules/papaparse/papaparse.min.js ${pubjs}/${papaparse_base}.min.js
# Re-minifying to remove comments
uglifyInPlace ${pubjs}/${papaparse_base}.min.js
gzip --best < "${pubjs}/${papaparse_base}.min.js" > "${pubjs}/${papaparse_base}.min.js"
echo -e '\e[0;32mdone copying:\e[0m' papaparse


### Cropper ###
cropper=node_modules/cropper/dist
cp ${cropper}/cropper.css ${pubcss}/${cropper_base}.css
cleancss ${pubcss}/${cropper_base}.css > ${pubcss}/${cropper_base}.min.css
gzip --best < "${pubcss}/${cropper_base}.min.css" > "${pubcss}/${cropper_base}.min.css"
cp ${cropper}/cropper.js ${pubjs}/${cropper_base}.js
cp ${cropper}/cropper.min.js ${pubjs}/${cropper_base}.min.js
uglifyInPlace ${pubjs}/${cropper_base}.min.js
gzip --best < "${pubjs}/${cropper_base}.min.js" > "${pubjs}/${cropper_base}.min.js"
echo -e '\e[0;32mdone copying:\e[0m cropper'


### Bundling leaflet & leaflet.markercluster ###
leaflet=node_modules/leaflet/dist
resetAndAddToBundle ${leaflet}/leaflet.css ${pubcss}/${leaflet_base}.css
resetAndAddToBundle ${leaflet}/leaflet-src.js ${pubjs}/${leaflet_base}.js
resetAndAddToBundle ${leaflet}/leaflet.js ${pubjs}/${leaflet_base}.min.js

mkdir -p ${pubimages}/map
cp ${leaflet}/images/* ${pubimages}/map

leafletmc=node_modules/leaflet.markercluster/dist
addToBundle ${leafletmc}/MarkerCluster.css ${pubcss}/${leaflet_base}.css
addToBundle ${leafletmc}/MarkerCluster.Default.css ${pubcss}/${leaflet_base}.css

addToBundle ${leafletmc}/leaflet.markercluster-src.js ${pubjs}/${leaflet_base}.js
addToBundle ${leafletmc}/leaflet.markercluster.js ${pubjs}/${leaflet_base}.min.js

cleancss ${pubcss}/${leaflet_base}.css > ${pubcss}/${leaflet_base}.min.css
gzip --best < "${pubcss}/${leaflet_base}.min.css" > "${pubcss}/${leaflet_base}.min.css"
# Re-minifying to remove comments
uglifyInPlace ${pubjs}/${leaflet_base}.min.js
gzip --best < "${pubjs}/${leaflet_base}.min.js" > "${pubjs}/${leaflet_base}.min.js"
echo -e '\e[0;32mdone copying:\e[0m leaflet and leaflet.markercluster'


### Piwik ###
# Following Piwik versions for script versioning
curl -sk https://piwik.allmende.io/piwik.js > ${pubjs}/${piwik_base}.js
cp ${pubjs}/${piwik_base}.js ${pubjs}/${piwik_base}.min.js
# Re-minifying to remove comments
uglifyInPlace ${pubjs}/${piwik_base}.min.js
gzip --best < "${pubjs}/${piwik_base}.min.js" > "${pubjs}/${piwik_base}.min.js"
echo -e '\e[0;32mdone downloading:\e[0m piwik'

### ForkAwesome ###
cp ./node_modules/fork-awesome/css/fork-awesome.css ./vendor/css
cp ./node_modules/fork-awesome/fonts/* app/assets/fonts/
echo -e '\e[0;32mdone copying:\e[0m' fork-awesome