#!/usr/bin/env sh

# A script to cache-bust files by content hash
# to allow to serve those files with immutable cache rules

get_content_hash(){
  md5sum "$1" | awk '{print $1}' | cut -c 1-7
}

create_content_hash_copies(){
  root_path=$1
  extension=$2
  content_hash=$(get_content_hash "${root_path}.${extension}")
  rm -f "${root_path}.*.${extension}*" "${root_path}.*.${extension}.map*"
  # Copy file
  cp "${root_path}.${extension}" "${root_path}.${content_hash}.${extension}"
  # Copy associated map file
  cp "${root_path}.${extension}.map" "${root_path}.${content_hash}.${extension}.map"
  # Gzip those new files
  gzip --best --force < "${root_path}.${content_hash}.${extension}" > "${root_path}.${content_hash}.${extension}.gz"
  gzip --best --force < "${root_path}.${content_hash}.${extension}.map" > "${root_path}.${content_hash}.${extension}.map.gz"
  # Gzip the file without content hash to make it easy to access to ./weight_watcher
  gzip --best --force < "${root_path}.${extension}" > "${root_path}.${extension}.gz"
  # Update index.html with the new file paths
  sed -i "s@${root_path}.${extension}@${root_path}.${content_hash}.${extension}@" public/index.html
}

create_content_hash_copies public/js/app js
create_content_hash_copies public/js/vendor js
create_content_hash_copies public/css/app css
create_content_hash_copies public/css/vendor css
