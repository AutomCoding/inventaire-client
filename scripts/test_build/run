#!/usr/bin/env node
import { get } from 'bluereq'
import _ from 'lodash'
import { green, grey, red } from 'chalk'

import tests from './tests'

const root = require('./get_root')()
// you should have an instance of prerender listening on port 3000
// http://github.com/inventaire/prerender
const prerender = 'http://localhost:3000'
const customQuery = 'agent=build-test&__refresh=true'

const promises = []

const buildUrl = function (path) {
  let url = `${prerender}/${root}/${v.path}`
  // requires forceCacheRefresh and multiFreshness
  // prerender plugins to be activated
  url += /\?/.test(path) ? '&' : '?'
  url += customQuery

  console.log(grey('get'), grey(url))
  return url
}

const passSectionTests = (sectionTests, html) => {
  for (const label in sectionTests) {
    const test = sectionTests[label]
    test(html)
    console.log(green('ok'), k, label)
  }
}

const rejectEmptyHtml = function (html) {
  if (html == null) throw new Error(`couldn't reach ${root}`)
  return html
}

const passSectionsTests = (k, v) => get(buildUrl(v.path))
.then(_.property('body'))
.then(rejectEmptyHtml)
.then(passSectionTests.bind(null, v.tests))
.then(() => console.log(green('OK'), k))
.catch(err => {
  console.log(red(`${k} err`), err.stack)
  throw err
})

for (const k in tests) {
  const v = tests[k]
  promises.push(passSectionsTests(k, v))
}

Promise.all(promises)
.then(() => console.log(green('the build was successfully tested: ready for deploy!')))
.catch(err => console.log(red('global err'), err.stack))
